{
    "name": "nekofar/dev-tools",
    "type": "library",
    "description": "Some of useful development requirements for PHP projects.",
    "license": "MIT",
    "authors": [
        {
            "name": "Milad Nekofar",
            "email": "milad@nekofar.com"
        }
    ],
    "require": {
        "php": "^7.3 || ^8.0",
        "dealerdirect/phpcodesniffer-composer-installer": "^0.7.1",
        "friendsofphp/php-cs-fixer": "^2.19",
        "infection/infection": "^0.18.2",
        "nekofar/coding-standard": "^1.2",
        "pestphp/pest": "^1.19",
        "phpmd/phpmd": "^2.10",
        "phpstan/extension-installer": "^1.1",
        "phpstan/phpstan": "^0.12.99",
        "phpunit/phpunit": "^8.0 || ^9.0",
        "psalm/plugin-phpunit": "^0.16.1",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.6",
        "symfony/var-dumper": "^5.3",
        "thecodingmachine/safe": "^1.3",
        "vimeo/psalm": "^4.10"
    },
    "suggest": {
        "behat/behat": "Behat is a test framework for behavior-driven development.",
        "brainbits/phpstan-rules": "Highly opinionated and strict rules for test cases for the PHPStan.",
        "codeception/codeception": "Codeception collects and shares best practices and solutions for testing PHP web applications. ",
        "ergebnis/composer-normalize": "Provides a composer plugin for normalizing composer.json.",
        "ergebnis/phpstan-rules": "Provides additional rules for PHPStan.",
        "ikvasnica/phpstan-clean-test": "Highly opinionated and strict rules for test cases for the PHPStan.",
        "korbeil/phpstan-generic-rules": "Generic rules extensions for PHPStan",
        "nunomaduro/phpinsights": "Instant PHP quality checks from your console",
        "pestphp/pest-plugin-global-assertions": "The Pest Global Assertions plugin",
        "phing/phing": "Phing is a PHP project build system or build tool based on Apache Ant.",
        "phpdocumentor/phpdocumentor": "Analyzing your PHP source code and DocBlock comments to generate a complete set of API Documentation.",
        "phpspec/phpspec": "A php toolset to drive emergent design by specification.",
        "phpstan/phpstan-beberlei-assert": "Rules for detect the type of object after the assertions validation.",
        "phpstan/phpstan-deprecation-rules": "Rules for detecting usage of deprecateds",
        "phpstan/phpstan-phpunit": "PHPStan PHPUnit extensions and rules",
        "phpstan/phpstan-strict-rules": "Extra strict and opinionated rules for PHPStan",
        "rector/rector": "Instant Upgrades and Automated Refactoring of any PHP 5.3+ code",
        "symplify/phpstan-rules": "Set of rules for PHPStan used by Symplify projects.",
        "thecodingmachine/phpstan-safe-rule": "A PHPStan rule to be used with the thecodingmachine/safe package",
        "thecodingmachine/phpstan-strict-rules": "A set of additional rules for PHPStan based on best practices followed at TheCodingMachine"
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.x-dev"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "infection": "infection",
        "lint": "@scan",
        "pest": "pest",
        "phpcbf": "phpcbf",
        "phpcs": "phpcs",
        "phpmd": "phpmd src ansi phpmd.xml.dist",
        "phpstan": "phpstan analyse --no-progress --ansi --memory-limit 256M",
        "phpunit": "phpunit",
        "psalm": "psalm --no-progress --stats --show-info=true --show-snippet",
        "scan": [
            "@phpcs",
            "@phpstan"
        ],
        "test": [
            "@scan",
            "@pest"
        ]
    },
    "scripts-descriptions": {
        "infection": "Runs Infection tests",
        "pest": "Runs Pest tests",
        "phpcbf": "Runs PHP_CodeSniffer fixes",
        "phpcs": "Runs PHP_CodeSniffer tests",
        "phpmd": "Runs PHP Mess Detector tests",
        "phpstan": "Runs PHPStan tests",
        "phpunit": "Runs PHPUnit tests",
        "psalm": "Runs Psalm tests",
        "scan": "Runs all scans!",
        "test": "Runs all tests!"
    }
}
